@top SwimProgramme { statement* }

PoolLengthDeclaration {
    SetKeyword PoolLengthKeyword Number LengthUnit
}

LengthUnit { identifier }

DistanceUnitDeclaration {
    SetKeyword DistanceUnitKeyword DistanceUnit
}

DistanceUnit { identifier }

PaceDefinition {
    PaceKeyword PaceDefinitionName "=" Pace
}

PaceDefinitionName { identifier }

Pace {
    PerceivedRate | VariableRate
}

PerceivedRate {
    (Percentage | PaceAlias)
}

Percentage {
    Number "%"         // e.g., 60% or 5%
}

PaceAlias { identifier }  // a named pace, e.g., easy or hard

VariableRate {
     PerceivedRate "->" PerceivedRate  // can model increasing or decreasing rate
}

statement {
    Instruction
    | RestInstruction
    | PoolLengthDeclaration
    | DistanceUnitDeclaration
    | PaceDefinition
    | Message
}

Instruction {
    (Number repititionOperator Instruction)?
    (SingleInstruction | BlockInstruction) StrokeModifier? InstructionModifier*
}

SingleInstruction {
    Distance Stroke
}

Distance { Number }

Stroke { identifier }

BlockInstruction {
    "{" statement+ "}"
}

StrokeModifier { identifier }

InstructionModifier {
  GearSpecification | PaceSpecification | TimeSpecification
}

GearSpecification {
    "+" RequiredGear+
}

RequiredGear { identifier }

PaceSpecification {
    "@" Pace
}

TimeSpecification {
    OnKeyword Duration
}

Duration {
    Number ":" Number    // minutes:seconds
}

RestInstruction {
    Duration RestKeyword
}

@tokens {
    SetKeyword            { "set" }
    PoolLengthKeyword     { "PoolLength" }
    DistanceUnitKeyword   { "DistanceUnit" }
    PaceKeyword           { "pace" }
    RestKeyword           { "rest" }
    OnKeyword             { "on" }
    space       { @whitespace+ }
    Comment     { "#" ![\n]* }
    Number      { @digit+ }
    Message     { ">" ![\n]+ }
    identifier  { @asciiLetter+ }
    repititionOperator { "x" }
    @precedence { repititionOperator, identifier }
    @precedence { PaceKeyword, identifier }
    @precedence { SetKeyword, identifier }
    @precedence { OnKeyword, identifier }
}

@skip { space | Comment }
